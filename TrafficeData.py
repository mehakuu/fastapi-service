# -*- coding: utf-8 -*-
"""Hygwell.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12m0CbiYnl7Hzx_JxK7JS-QHQNUngt3Tz
"""

import pandas as pd
data = pd.read_csv("traffic.csv");
# 1. Total and Daily Pageview Events
total_pageviews = data[data['event'] == 'click'].shape[0]
data['date'] = pd.to_datetime(data['date'])
unique_days = data['date'].nunique()
average_pageviews_per_day = total_pageviews / unique_days
total_pageviews, average_pageviews_per_day

# 2. Analysis of Other Events
total_events = data.shape[0]
event_distribution = data['event'].value_counts()
total_events, event_distribution

# 3. Geographical Distribution
geo_distribution = data[data['event'] == 'click'].groupby('country')['event'].count()
geo_distribution.sort_values(ascending=False).head(10)

# 4. Click-Through Rate (CTR) Analysis
clicks_by_link = data[data['event'] == 'click'].groupby('linkid').size().reset_index(name='clicks')
pageviews_by_link = data[data['event'] == 'pageview'].groupby('linkid').size().reset_index(name='pageviews')
ctr_data = pd.merge(clicks_by_link, pageviews_by_link, on='linkid', how='outer').fillna(0)
ctr_data['CTR'] = ctr_data['clicks'] / ctr_data['pageviews']
overall_ctr = ctr_data['CTR'].mean()
ctr_by_link = ctr_data.set_index('linkid')['CTR']
print(f"Overall Click-Through Rate (CTR): {overall_ctr}")
print("CTR by Link:")
print(ctr_by_link)

# 5. Correlation Analysis
import pandas as pd
from scipy.stats import pearsonr
clicks_by_link = data[data['event'] == 'click'].groupby('linkid').size().reset_index(name='clicks')
previews_by_link = data[data['event'] == 'preview'].groupby('linkid').size().reset_index(name='previews')
corr_data = pd.merge(clicks_by_link, previews_by_link, on='linkid', how='outer').fillna(0)
clicks = corr_data['clicks']
previews = corr_data['previews']
corr, p_value = pearsonr(clicks, previews)
print(f"Correlation between Clicks and Previews: {corr}")
print(f"P-value of the correlation: {p_value}")
if p_value < 0.05:
    print("The correlation is statistically significant.")
else:
    print("The correlation is not statistically significant.")